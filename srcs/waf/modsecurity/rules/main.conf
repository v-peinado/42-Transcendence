#=============================================================
# SECTION 1: Base Configuration and Initialization
#=============================================================

# Load core configuration
Include /etc/nginx/modsecurity.d/modsecurity.conf

# Logging Configuration
SecDebugLog /var/log/modsecurity/debug.log
SecDebugLogLevel 3
SecAuditEngine On
SecAuditLog /var/log/modsecurity/audit.log
SecAuditLogParts ABCDEFHIJKZ
SecAuditLogRelevantStatus ".*"
SecAuditLogStorageDir /var/log/modsecurity/audit/
SecAuditLogFormat JSON

#=============================================================
# SECTION 2: CRS Rules Inclusion
#=============================================================

# Core Rule Set base configuration
Include /etc/modsecurity/crs/crs-setup.conf

# Include all CRS rule files in a structured manner
Include /usr/share/modsecurity-crs/rules/REQUEST-901-INITIALIZATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf

#=============================================================
# SECTION 3: Anti-Automation Rules
#=============================================================

# Anti-scanner rule
# Blocks requests with "scanner" in User-Agent
SecRule REQUEST_HEADERS:User-Agent "@rx .*scanner.*" \
    "id:1000,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Scanner detected',\
    severity:'CRITICAL',\
    tag:'scanner-detection'"

# Anti bot/crawler rule
# Blocks common bot identifiers in User-Agent
SecRule REQUEST_HEADERS:User-Agent "@pm bot crawler spider" \
    "id:1001,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Bot/Crawler detected',\
    severity:'WARNING',\
    tag:'automation-detection'"

#=============================================================
# SECTION 4: File Upload Protection Rules
#=============================================================

# Magic bytes verification for images
# Ensures files start with correct image signatures
SecRule FILES "@rx ." \
    "id:1101,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image magic bytes',\
    chain"
    SecRule FILES_TMP_CONTENT "!@rx ^(?:\x89PNG|\xff\xd8\xff|\x47\x49\x46)" \
        "t:none,\
        ctl:forceRequestBodyVariable=On"

# File extension verification
# Ensures only allowed image extensions
SecRule FILES "@rx ." \
    "id:1102,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image extension',\
    logdata:'Filename=%{MULTIPART_FILENAME}',\
    tag:'file_upload',\
    chain"
    SecRule REQUEST_METHOD "@streq POST" \
        "chain"
        SecRule MULTIPART_FILENAME "!@rx (?i)\.(jpg|jpeg|png|gif)$" \
            "t:none"

# File size limit (5MB)
# Third layer of defense after backend (2MB) and nginx (3MB) limits
SecRule REQUEST_HEADERS:Content-Length "@gt 5242880" \
    "id:1103,\
    phase:1,\
    deny,\
    status:413,\
    log,\
    msg:'Invalid file size',\
    tag:'file-upload'"

# File name check (block common webshells)
SecRule FILES_NAMES "@rx (?:\.\.|\/|\\|:|\.(?:php|exe|sh|jsp|aspx|bat|cmd|py|rb|pl|cgi)$)" \
    "id:1104,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid file name',\
    tag:'file-upload'"

# Detect mismatches between file extension and content type
SecRule FILES "@rx ." \
    "id:1105,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid file extension and content type',\
    tag:'file-upload',\
    chain"
    SecRule MULTIPART_FILENAME "@rx (?i)\.png$" \
        "chain"
        SecRule FILES_TMP_CONTENT "!@rx ^\x89PNG" \
            "t:none"

SecRule FILES "@rx ." \
    "id:1106,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid file extension and content type',\
    tag:'file-upload',\
    chain"
    SecRule MULTIPART_FILENAME "@rx (?i)\.(jpg|jpeg)$" \
        "chain"
        SecRule FILES_TMP_CONTENT "!@rx ^\xff\xd8\xff" \
            "t:none"

SecRule FILES "@rx ." \
    "id:1107,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid file extension and content type',\
    tag:'file-upload',\
    chain"
    SecRule MULTIPART_FILENAME "@rx (?i)\.gif$" \
        "chain"
        SecRule FILES_TMP_CONTENT "!@rx ^GIF" \
            "t:none"

#=============================================================
# SECTION 5: Security Vulnerability Protection
#=============================================================

# XSS Protection Rules
# Multiple layers of XSS detection with different approaches

# Basic XSS Detection
SecRule REQUEST_COOKIES|REQUEST_HEADERS|REQUEST_BODY "@contains <script" \
    "id:1000003,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Potential XSS Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    severity:'CRITICAL',\
    tag:'attack-xss'"

# Advanced XSS Detection
# More comprehensive pattern matching, excludes multipart/form-data
SecRule REQUEST_COOKIES|REQUEST_HEADERS|ARGS|REQUEST_BODY "@rx (?i:(?:<[^>]*[<>]*>)|(?:javascript:)|(?:vbscript:)|(?:data:)|(?:onload=)|(?:onerror=)|(?:onclick=))" \
    "id:1000009,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Advanced XSS Attack Detected',\
    tag:'attack-xss',\
    severity:'CRITICAL',\
    chain"
    SecRule REQUEST_HEADERS:Content-Type "!@contains multipart/form-data" \
        "t:none"

# SQL Injection Protection Rules
# Multiple layers with different detection patterns

# Basic SQL Injection Detection
SecRule REQUEST_COOKIES|REQUEST_HEADERS|ARGS|REQUEST_BODY "@rx (?i:(?:'\s*?(?:or|and)\s*?')|(?:--.*?)|(?:\/\*.*?\*\/)|(?:(?:;.*?)?(?:drop|alter|create|truncate|rename|insert|delete|update|union|select)\s))" \
    "id:1000005,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'SQL Injection Attack Detected',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    severity:'CRITICAL',\
    tag:'attack-sqli',\
    chain"
    SecRule REQUEST_HEADERS:Content-Type "!@contains multipart/form-data" \
        "t:none"

# Specific Login SQL Injection Protection (exclude multipart/form-data)
SecRule ARGS_POST|REQUEST_BODY "@rx (?:--[^\n]*$)|(?:\/\*(?:.*?)\*\/)|(?:(?:=|<|>|<=|>=|!=|<>|is\s+null|is\s+not\s+null)\s*?[0-9]+)|(?:'\s*?or\s*?')|(?:'\s*?and\s*?')" \
    "id:1000006,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'SQL Injection in Login Attempt',\
    logdata:'Matched Data: %{MATCHED_VAR}',\
    severity:'CRITICAL',\
    tag:'attack-sqli',\
    tag:'login-security',\
    chain"
    SecRule REQUEST_HEADERS:Content-Type "!@contains multipart/form-data" \
        "t:none"

# Original Path Traversal Protection
SecRule REQUEST_URI|ARGS|REQUEST_FILENAME "@rx (?:\.{2}[/\\]|[/\\]\.{2}|/etc/|/var/|/usr/|/tmp/|/root/)" \
    "id:1000007,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Path Traversal Attack Detected',\
    tag:'attack-lfi',\
    severity:'CRITICAL'"

# Enhanced Path Traversal Protection (cambiar ID a 1000010)
SecRule REQUEST_URI|ARGS|REQUEST_FILENAME "@rx (?i:(?:\.{2}[/\\]|[/\\]\.{2}|(?:%2e){2}|(?:%252e){2}|\\\\|0x2e|\/etc\/|\/var\/|\/usr\/|\/tmp\/|\/root\/))" \
    "id:1000010,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Advanced Path Traversal Attack Detected',\
    tag:'attack-lfi',\
    severity:'CRITICAL'"

# Enhanced registration protection
SecRule REQUEST_URI "@contains /register" \
    "id:1000008,\
    phase:2,\
    chain,\
    deny,\
    status:403,\
    log,\
    msg:'XSS Attack in Registration'"
    SecRule REQUEST_BODY "@rx (?:<[^>]*>|javascript:|data:|vbscript:)" \
        "t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"

# Command Injection Protection 
SecRule REQUEST_COOKIES|!REQUEST_HEADERS:Accept-Language|ARGS|REQUEST_BODY "@rx (?i:(?:\$\{.*\}|\$\(.*\)|`.*`)|(?:[;&|]{1,2}[\s\S]*?(?:[\x0a\x0d]|$))|(?:(?:^|\W)(?:c(?:at|md|p|url)|g(?:et|rep)|e(?:cho|val)|w(?:get|hoami)|(?:ba)?sh)(?:\.exe)?(?:\W|$))|(?:[;<>][\w\s]*?\b(?:\/[\w\s]*)?(?:[a-z]\:|[\\/])[\\\\/]?))" \
    "id:1000011,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Command Injection Attack Detected',\
    tag:'attack-rce',\
    severity:'CRITICAL',\
    chain"
    SecRule REQUEST_URI "!@contains /api/profile/" \
        "chain"
        SecRule REQUEST_HEADERS:Content-Type "!@contains multipart/form-data"

# Restrict access to profile endpoint
SecRule REQUEST_URI "@rx ^/api/profile/$" \
    "id:1000014,\
    phase:2,\
    pass,\
    nolog,\
    ctl:ruleEngine=DetectionOnly,\
    ctl:ruleRemoveById=1000011"

# Enhanced Path Traversal Protection with URL encoding
SecRule REQUEST_URI|ARGS|REQUEST_FILENAME "@rx (?i:(?:(?:\/|\\|\b)\.{2,}(?:\/|\\|$))|(?:%(?:2e|2f|5c|c0|c1|af|5e){2,})|(?:0x(?:2e|2f|5c))|(?:\/etc\/|\/var\/|\/usr\/|\/tmp\/|\/root\/))" \
    "id:1000012,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Advanced Path Traversal Attack Detected',\
    tag:'attack-lfi',\
    severity:'CRITICAL'"

# URL-encoded Path Traversal Protection
SecRule REQUEST_URI|ARGS|REQUEST_FILENAME "@rx (?i:(?:%2e%2e[\/\\]|[\/\\]%2e%2e|%2e%2e%2f|%2e%2e%5c|%252e%252e))" \
    "id:1000013,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'URL-encoded Path Traversal Attack Detected',\
    tag:'attack-lfi',\
    severity:'CRITICAL'"

# Enable audit logging for XSS attempts
SecAuditLogParts ABCFHZ
SecAuditEngine RelevantOnly
SecAuditLogRelevantStatus "^(?:5|4(?!04))"

# Enhanced audit logging
SecAuditLogType Serial
SecAuditLog /var/log/modsecurity/audit/audit.log
SecAuditLogStorageDir /var/log/modsecurity/audit/
SecAuditLogParts ABCDEFHIJKZ

# Add custom debug rules
SecRule REQUEST_URI "@contains login" \
    "id:1000001,\
    phase:1,\
    pass,\
    log,\
    msg:'Login attempt detected',\
    logdata:'User=%{ARGS.username}'"

# Add custom XSS logging rule instead
SecRule REQUEST_URI "@contains login" \
    "id:1000002,\
    phase:2,\
    pass,\
    log,\
    msg:'Monitoring login endpoint',\
    logdata:'Args=%{ARGS}'"

# Increase Debug Level for XSS Rules
SecRule REQUEST_URI "@contains login" \
    "id:1000004,\
    phase:2,\
    pass,\
    log,\
    msg:'Login Request Body',\
    logdata:'POST Data: %{REQUEST_BODY}'"

#=============================================================
# SECTION 6: Game API Endpoints Protection Rules
#=============================================================

# Protection for game endpoints - verifies authentication
SecRule REQUEST_URI "@beginsWith /game/" \
    "id:2000,\
    phase:1,\
    chain,\
    t:none,\
    deny,\
    status:403,\
    msg:'Access to game area without authentication',\
    tag:'authentication',\
    severity:'WARNING'"
    SecRule &REQUEST_COOKIES:/sessionid/ "@eq 0" "t:none"

# Protection for game endpoints - verifies session validity
SecRule REQUEST_URI "@beginsWith /game/" \
    "id:2001,\
    phase:1,\
    chain,\
    t:none,\
    deny,\
    status:403,\
    msg:'Invalid session for game area',\
    tag:'authentication',\
    severity:'WARNING'"
    SecRule REQUEST_COOKIES:/sessionid/ "^$" "t:none"

# Protection for game WebSocket endpoints
SecRule REQUEST_URI "@rx ^/ws/game/" \
    "id:2002,\
    phase:1,\
    chain,\
    t:none,\
    deny,\
    status:403,\
    msg:'WebSocket access without authentication',\
    tag:'authentication',\
    severity:'WARNING'"
    SecRule &REQUEST_COOKIES:/sessionid/ "@eq 0" "t:none"

# Detection of game parameter manipulation
SecRule REQUEST_URI "@beginsWith /game/game/" \
    "id:2003,\
    phase:2,\
    chain,\
    t:none,\
    deny,\
    status:403,\
    msg:'Game parameter manipulation',\
    tag:'game-manipulation',\
    severity:'CRITICAL'"
    SecRule ARGS:game_id "@rx [^0-9]" "t:none"

# Specific protection for matchmaking
SecRule REQUEST_URI "@beginsWith /game/matchmaking/" \
    "id:2004,\
    phase:1,\
    chain,\
    t:none,\
    deny,\
    status:403,\
    msg:'Access to matchmaking without authentication',\
    tag:'authentication',\
    severity:'WARNING'"
    SecRule &REQUEST_COOKIES:/sessionid/ "@eq 0" "t:none"
