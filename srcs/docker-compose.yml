networks:
  trancendence-backend:
    driver: bridge

services:
  web:
    build:
      context: ./django
    container_name: django
    ports:
      - "8000:8000"
    networks:
      - trancendence-backend
    volumes:
      - django_static:/app/static
      - django_media:/app/media
    depends_on:
      - db
    env_file:
      - .env
    restart: always

  db:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - trancendence-backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  nginx:
    build: ./nginx
    expose:
      - "80"
      - "443"
      - "8443"
    networks:
      - trancendence-backend
    volumes:
      - type: volume
        source: nginx_static
        target: /usr/share/nginx/html
      - type: volume
        source: django_media
        target: /usr/share/nginx/html/media
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-k", "https://localhost:8443/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  waf:
    build: ./waf
    ports:
      - "8082:8081"
      - "8445:8444"
      - "8200:8200"
    networks:
      - trancendence-backend
    volumes:
      - ssl_certs:/tmp/ssl
      - ./waf/rules:/etc/modsecurity/rules:ro
      - waf_logs:/var/log/nginx
    env_file:
      - .env
    command: sh -c "rm -f /tmp/nginx.pid && /usr/local/bin/init-vault.sh"
    depends_on:
      - nginx
      - web
    restart: always

volumes:
  postgres_data: 
  django_media:
  nginx_static:
  waf_logs:
  ssl_certs:
  waf-certs:
  django_static:
