# Base ModSecurity Configuration
Include /etc/nginx/modsecurity.d/modsecurity.conf

# Basic CRS Configuration
Include /etc/modsecurity/crs/crs-setup.conf

# Main CRS Rules (prevents common attacks)
Include /usr/share/modsecurity-crs/rules/REQUEST-901-INITIALIZATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf

# Anti-scanner (detects if User-Agent contains the word "scanner")
SecRule REQUEST_HEADERS:User-Agent "@rx .*scanner.*" \
    "id:1000,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Scanner detected',\
    severity:'CRITICAL',\
    tag:'scanner-detection'"

# Anti bot/crawler (detects if User-Agent contains "bot", "crawler" or "spider")
SecRule REQUEST_HEADERS:User-Agent "@pm bot crawler spider" \
    "id:1001,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Bot/Crawler detected',\
    severity:'WARNING',\
    tag:'automation-detection'"

#== Upload Images ==#

# Log all file uploads (debug)
SecRule FILES_TMPNAMES "@rx .*" \
    "id:1100,\
    phase:2,\
    pass,\
    log,\
    msg:'File upload attempt',\
    logdata:'Files=%{MULTIPART_FILENAME},TmpName=%{FILES_TMPNAMES}'"

# Image file check (only allow PNG, JPEG, and GIF) - magic bytes check
SecRule REQUEST_URI "@beginsWith /api/profile/" \
    "id:1101,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image magic bytes',\
    chain"
    SecRule FILES "@rx ." \
        "chain"
        SecRule FILES_TMP_CONTENT "!@rx ^(?:\x89PNG|\xff\xd8\xff|\x47\x49\x46)" \
            "t:none,\
            ctl:forceRequestBodyVariable=On"

# Block invalid images by extension
SecRule REQUEST_URI "@beginsWith /api/profile" \
    "id:1102,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image extension',\
    logdata:'Filename=%{MULTIPART_FILENAME}',\
    tag:'file_upload',\
    chain"
    SecRule REQUEST_METHOD "@streq POST" \
        "chain"
        SecRule MULTIPART_FILENAME "!@rx (?i)\.(jpg|jpeg|png|gif)$" \
            "t:none"