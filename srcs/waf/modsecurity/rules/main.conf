# Base ModSecurity Configuration
Include /etc/nginx/modsecurity.d/modsecurity.conf

# Enhanced Logging Configuration
SecDebugLog /var/log/modsecurity/debug.log
SecDebugLogLevel 3
SecAuditEngine On
SecAuditLog /var/log/modsecurity/audit.log
SecAuditLogParts ABDEFHIJKZ
SecAuditLogRelevantStatus ".*"
SecAuditLogStorageDir /var/log/modsecurity/audit/
SecAuditLogFormat JSON

# Enable detailed error messages
SecRule TX:DETECTION_PARANOIA_LEVEL "@ge 1" \
    "id:900001,\
    phase:1,\
    pass,\
    t:none,\
    nolog,\
    setvar:tx.blocking_paranoia_level=1"

# Log all CRS rule triggers with extra details
SecAction \
    "id:900002,\
    phase:1,\
    pass,\
    t:none,\
    nolog,\
    setvar:tx.crs_log_all=1,\
    setvar:tx.msg_debug=1"

# Basic CRS Configuration
Include /etc/modsecurity/crs/crs-setup.conf

# Main CRS Rules (prevents common attacks)
Include /usr/share/modsecurity-crs/rules/REQUEST-901-INITIALIZATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
Include /usr/share/modsecurity-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf

# Anti-scanner (detects if User-Agent contains the word "scanner")
SecRule REQUEST_HEADERS:User-Agent "@rx .*scanner.*" \
    "id:1000,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Scanner detected',\
    severity:'CRITICAL',\
    tag:'scanner-detection'"

# Anti bot/crawler (detects if User-Agent contains "bot", "crawler" or "spider")
SecRule REQUEST_HEADERS:User-Agent "@pm bot crawler spider" \
    "id:1001,\
    phase:1,\
    deny,\
    status:403,\
    log,\
    msg:'Bot/Crawler detected',\
    severity:'WARNING',\
    tag:'automation-detection'"

#== Uploads and File Checks ================================================

# Log all file uploads (debug)
# SecRule FILES_TMPNAMES "@rx .*" \
#     "id:1100,\
#     phase:2,\
#     pass,\
#     log,\
#     msg:'File upload attempt',\
#     logdata:'Files=%{MULTIPART_FILENAME},TmpName=%{FILES_TMPNAMES}'"

# Image file check (only allow PNG, JPEG, and GIF) - magic bytes check
SecRule FILES "@rx ." \
    "id:1101,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image magic bytes',\
    chain"
    SecRule FILES_TMP_CONTENT "!@rx ^(?:\x89PNG|\xff\xd8\xff|\x47\x49\x46)" \
        "t:none,\
        ctl:forceRequestBodyVariable=On"

# Block invalid images by extension
SecRule FILES "@rx ." \
    "id:1102,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid image extension',\
    logdata:'Filename=%{MULTIPART_FILENAME}',\
    tag:'file_upload',\
    chain"
    SecRule REQUEST_METHOD "@streq POST" \
        "chain"
        SecRule MULTIPART_FILENAME "!@rx (?i)\.(jpg|jpeg|png|gif)$" \
            "t:none"

# File size check (10MB limit)
SecRule REQUEST_HEADERS:Content-Length "@gt 10000000" \
    "id:1103,\
    phase:1,\
    deny,\
    status:413,\
    log,\
    msg:'Invalid file size',\
    tag:'file-upload'"

# File name check (block common webshells)
SecRule FILES_NAMES "@rx (?:\.\.|\/|\\|:|\.(?:php|exe|sh|jsp|aspx|bat|cmd|py|rb|pl|cgi)$)" \
    "id:1104,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'Invalid file name',\
    tag:'file-upload'"
