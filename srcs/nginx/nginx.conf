events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Directorios temporales
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path    /tmp/fastcgi_temp;
    uwsgi_temp_path      /tmp/uwsgi_temp;
    scgi_temp_path       /tmp/scgi_temp;

    # Resolver para Docker DNS
    resolver 127.0.0.11 valid=30s;

    # Servidor HTTPS (puertos 443 y 8443)
    server {
        listen 443 ssl;      # Puerto HTTPS principal
        listen 8443 ssl;     # Puerto HTTPS adicional
        server_name localhost;

        # SSL
        ssl_certificate     /tmp/ssl/transcendence.crt;
        ssl_certificate_key /tmp/ssl/transcendence.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers        HIGH:!aNULL:!MD5;

        # Root y archivos estáticos
        root /usr/share/nginx/html;
        
        # Frontend (debe ser la primera location)
        location / {
            proxy_pass http://front:3000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout    60s;
            proxy_read_timeout    60s;
        }

        # API proxy
        location /api {
            proxy_pass http://web:8000;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;

            # Actualizar CORS headers
            add_header 'Access-Control-Allow-Origin' 'https://localhost:8445';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,X-CSRFToken';
            add_header 'Access-Control-Allow-Credentials' 'true';
            
            # Manejar preflight OPTIONS
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Archivos estáticos
        location /static/ {
            alias /usr/share/nginx/html/static/;
        }

        location /media/ {
            alias /usr/share/nginx/html/media/;
        }
    }
}