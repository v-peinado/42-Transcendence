networks:
  trancendence-backend:
    driver: bridge
  app-network:
    driver: bridge

services:
  web:
    build:
      context: ./django
    container_name: django
    ports:
      - "8000:8000"
    networks:
      - trancendence-backend
    volumes:
      - django_static:/app/static
      - django_media:/app/media
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=postgres
      - SQL_USER=postgres
      - SQL_PASSWORD=postgres
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - db
    env_file:
      - .env
    restart: always

  db:
    image: postgres:17
    container_name: postgres
    ports:
      - "5432:5432"
    networks:
      - trancendence-backend
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  nginx:
    build: ./nginx
    container_name: nginx
    expose:
      - "80"
    networks:
      - trancendence-backend
      - app-network
    volumes:
      - type: volume
        source: nginx_static
        target: /usr/share/nginx/html
      - type: volume
        source: django_media
        target: /usr/share/nginx/html/media
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - web
    restart: always

  waf:
    build: ./waf
    ports:
      - "8082:8081"   # http://localhost:8082 para acceder al WAF
      - "8445:8444"   # https://localhost:8445 para acceder al WAF
      - "8200:8200"   # http://localhost:8200 para acceder a Vault
    networks:
      - trancendence-backend
      - app-network
    volumes:
      - ssl_certs:/tmp/ssl
      - ./waf/rules:/etc/modsecurity/rules:ro
      - waf_logs:/var/log/nginx
    environment:
      - NGINX_BACKEND=web:8000
    depends_on:
      - web
    restart: always

  ssl-cert-generator:
    build: 
      context: ./waf
      dockerfile: Dockerfile.ssl
    volumes:
      - waf-certs:/ssl

volumes:
  postgres_data: 
  django_media:
  django_code:
  nginx_static:
  waf_logs:
  vault_data:
  ssl_certs:
  waf-certs:
  django_static:


